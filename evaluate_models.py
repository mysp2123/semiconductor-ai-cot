import json
from transformers import pipeline
import time

# T·∫£i m√¥ h√¨nh GPT-2 ho·∫∑c GPT-Neo t·ª´ Hugging Face
generator = pipeline("text-generation", model="gpt2", pad_token_id=50256)  # 50256 l√† EOS token ID cho GPT-2

# ƒê·ªçc c√¢u h·ªèi t·ª´ file JSON
def load_questions(file_path):
    """ƒê·ªçc d·ªØ li·ªáu c√¢u h·ªèi t·ª´ file JSON"""
    with open(file_path, "r", encoding="utf-8") as f:
        return json.load(f)

# Tr·∫£ l·ªùi c√¢u h·ªèi b·∫±ng GPT-2 ho·∫∑c GPT-Neo
def query_model(question, method="standard"):
    """G·ª≠i c√¢u h·ªèi t·ªõi m√¥ h√¨nh GPT-2 ho·∫∑c GPT-Neo v·ªõi ph∆∞∆°ng ph√°p mong mu·ªën"""
    if method == "standard":
        prompt = f"Answer the following question concisely: {question}"
    elif method == "cot":
        prompt = f"Think step by step and then answer: {question}"
    else:
        prompt = f"{question}"  # D·ª± ph√≤ng cho c√°c ph∆∞∆°ng ph√°p kh√°c

    try:
        # S·ª≠ d·ª•ng m√¥ h√¨nh GPT-2 ho·∫∑c GPT-Neo ƒë·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi
        response = generator(prompt, max_length=200, num_return_sequences=1)
        return response[0]["generated_text"].strip()
    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói khi g·ªçi m√¥ h√¨nh: {e}")
        return "[ERROR]"

# ƒê√°nh gi√° m√¥ h√¨nh GPT-2 ho·∫∑c GPT-Neo tr√™n b·ªô d·ªØ li·ªáu c√¢u h·ªèi
def evaluate_questions(input_file, output_file):
    """Ch·∫°y ƒë√°nh gi√° m√¥ h√¨nh GPT-2 ho·∫∑c GPT-Neo tr√™n b·ªô d·ªØ li·ªáu c√¢u h·ªèi"""
    data = load_questions(input_file)
    results = []

    for item in data:
        question = item["question"]
        gt_answer = item["answer"]

        print(f"üß† ƒêang x·ª≠ l√Ω: {question}")
        standard_answer = query_model(question, method="standard")
        cot_answer = query_model(question, method="cot")

        results.append({
            "question": question,
            "ground_truth": gt_answer,
            "standard_answer": standard_answer,
            "cot_answer": cot_answer
        })
        time.sleep(1)  # Tr√°nh g·ª≠i qu√° nhi·ªÅu request c√πng l√∫c

    # L∆∞u k·∫øt qu·∫£ v√†o file JSON
    with open(output_file, "w", encoding="utf-8") as f:
        json.dump(results, f, indent=2, ensure_ascii=False)

    print(f"‚úÖ ƒê√£ l∆∞u k·∫øt qu·∫£ v√†o {output_file}")

# Ch·∫°y ƒë√°nh gi√° m√¥ h√¨nh
if __name__ == "__main__":
    input_file = "db/questions/cot_questions_clean.json"
    output_file = "results/evaluated_results.json"

    print("üöÄ B·∫Øt ƒë·∫ßu ƒë√°nh gi√° m√¥ h√¨nh GPT-2 ho·∫∑c GPT-Neo...")
    evaluate_questions(input_file, output_file)
    print("‚úÖ Ho√†n th√†nh ƒë√°nh gi√°!")
